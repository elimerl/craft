import './Item.svelte.css.proxy.js';
/* src/components/Item.svelte generated by Svelte v3.35.0 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	set_data,
	set_style,
	space,
	text
} from "../../_snowpack/pkg/svelte/internal.js";

import _items from "./items.json.proxy.js";

function create_if_block(ctx) {
	let span;
	let t;

	return {
		c() {
			span = element("span");
			t = text(/*count*/ ctx[1]);
			attr(span, "class", "Item-count svelte-1ivpekk");
		},
		m(target, anchor) {
			insert(target, span, anchor);
			append(span, t);
		},
		p(ctx, dirty) {
			if (dirty & /*count*/ 2) set_data(t, /*count*/ ctx[1]);
		},
		d(detaching) {
			if (detaching) detach(span);
		}
	};
}

function create_fragment(ctx) {
	let div;
	let img;
	let img_src_value;
	let t;
	let if_block = /*count*/ ctx[1] > 1 && create_if_block(ctx);

	return {
		c() {
			div = element("div");
			img = element("img");
			t = space();
			if (if_block) if_block.c();
			if (img.src !== (img_src_value = /*getItemTex*/ ctx[3](/*item*/ ctx[0]))) attr(img, "src", img_src_value);
			attr(img, "alt", /*item*/ ctx[0]);
			attr(img, "class", "Item-img svelte-1ivpekk");
			attr(div, "class", "Item svelte-1ivpekk");
			set_style(div, "--size", /*size*/ ctx[2] + "px");
		},
		m(target, anchor) {
			insert(target, div, anchor);
			append(div, img);
			append(div, t);
			if (if_block) if_block.m(div, null);
		},
		p(ctx, [dirty]) {
			if (dirty & /*item*/ 1 && img.src !== (img_src_value = /*getItemTex*/ ctx[3](/*item*/ ctx[0]))) {
				attr(img, "src", img_src_value);
			}

			if (dirty & /*item*/ 1) {
				attr(img, "alt", /*item*/ ctx[0]);
			}

			if (/*count*/ ctx[1] > 1) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					if_block.m(div, null);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}

			if (dirty & /*size*/ 4) {
				set_style(div, "--size", /*size*/ ctx[2] + "px");
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div);
			if (if_block) if_block.d();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	const items = _items;
	let { item = "diamond_sword" } = $$props;
	let { count = 1 } = $$props;
	let { size = 64 } = $$props;

	function getItemTex(item) {
		const _item = items.find(v => v.name === item);

		return _item
		? `data:image/png;base64,${_item.texture}`
		: "https://via.placeholder.com/64x64";
	}

	$$self.$$set = $$props => {
		if ("item" in $$props) $$invalidate(0, item = $$props.item);
		if ("count" in $$props) $$invalidate(1, count = $$props.count);
		if ("size" in $$props) $$invalidate(2, size = $$props.size);
	};

	return [item, count, size, getItemTex];
}

class Item extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { item: 0, count: 1, size: 2 });
	}
}

export default Item;